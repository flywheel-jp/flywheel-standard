#!/usr/bin/env python3

"""Setup developer's local machine

See: docs/local_environment.md
"""

import os.path
import platform
import subprocess
import sys
import shutil

PROJECT_DIR = os.path.dirname(os.path.abspath(os.path.join(__file__, "..")))

def execute(command: str, error_message: str, prologue: str=None, epilogue: str=None) -> None:
    """Execute shell command.

    Raises:
        SystemExit: if the command fails.
    """
    if prologue:
        print(prologue)
    try:
        subprocess.run(command, shell=True, check=True)
    except subprocess.CalledProcessError:
        print(error_message)
        sys.exit(1)
    if epilogue:
        print(epilogue)

def setup_macos() -> None:
    if not shutil.which("brew"):
        execute(
            command="curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install | /usr/bin/ruby",
            prologue="Installing Homebrew.",
            epilogue="Installed Homebrew successfully.",
            error_message="Failed to install Homebrew."
        )
    else:
        print("Skipping install of Homebrew. It is already installed.")

    execute(
        command=f"brew bundle --file='{PROJECT_DIR}/Brewfile.macos'",
        prologue="Installing dependencies using Homebrew Bundle.",
        epilogue="Installed dependencies successfully.",
        error_message="Failed to install dependencies."
    )

    execute(
        command="open -a Docker",
        prologue="Open Docker.app to install docker-compose",
        error_message="Failed to open Docker.app"
    )

if __name__ == "__main__":
    system = platform.system()
    if system == "Darwin":
        setup_macos()
    else:
        print(f"Unsupported system: {system}")
        sys.exit(1)
